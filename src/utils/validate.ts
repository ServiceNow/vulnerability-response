import { SchemaType } from '@/src/types/schemas'
import Ajv from 'ajv'
import {
  INVALID_INPUT_VALUES,
  UNABLE_TO_RESOLVE_SCHEMA
} from '@/src/types/errors'
import { ActionArguments } from '@/src/types/arguments'
import actionInputSchema from '../../static/actionInputSchema.json'

const ajv = new Ajv()

export async function validate(
  data: any,
  schema: SchemaType = SchemaType.action_inputs
) {
  let jsonSchema

  switch (schema) {
    case SchemaType.action_inputs:
      jsonSchema = actionInputSchema
      break
    default:
      throw new Error(UNABLE_TO_RESOLVE_SCHEMA.message)
  }

  const validator = ajv.compile(jsonSchema)
  const isValid = validator(data)
  if (!isValid) {
    throw new Error(INVALID_INPUT_VALUES(validator.errors).message)
  }
  return isValid
}
