export interface ActionArguments {
  ghAccountOwner: string
  provider: Provider
  repository: string
  path?: string
  secrets: ActionSecretArguments
  sbomRestApiUploadArguments?: SbomRestApiUploadArguments
}

export interface ActionSecretArguments {
  snSbomUser: string
  snSbomPassword: string
  snInstanceUrl: string
  ghToken: string
}

export enum LifecycleStage {
  pre_production = 'pre_production',
  production = 'production'
}

export enum Provider {
  repository = 'repository',
  dependencyGraph = 'dependencyGraph'
}

export interface SbomRestApiUploadArguments {
  businessApplicationId?: string
  businessApplicationName?: string
  buildId?: string
  productModelId?: string
  requestedBy?: string
  lifecycleStage?: LifecycleStage
  fetchVulnerabilityInfo?: boolean
  fetchPackageInfo?: boolean
  sbomSource?: string
}

export interface FetchFromDependencyGraphArguments {
  ghAccountOwner: string
  ghToken: string
  repository: string
}

type SbomDocument = object
export interface FetchedSbomDocument {
  document: SbomDocument
  documentName: string
  type: 'spdx' | 'cyclonedx'
}
