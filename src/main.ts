import * as core from '@actions/core'
import { setup } from '@/src/utils/setup'
import { validate } from '@/src/utils/validate'
import { SchemaType } from '@/src/types/schemas'
import { arbitrate } from '@/src/providers/arbitrator'
import dotenv from 'dotenv'
import { upload } from '@/src/api/upload'
import { status } from '@/src/api/status'
dotenv.config()
export var process: NodeJS.Process

/**
 * The main function for the action.
 * @returns {Promise<void>} Resolves when the action is complete.
 */
export async function run(): Promise<void> {
  try {
    const actionArguments = setup()
    await validate(actionArguments, SchemaType.action_inputs)

    let payload = await arbitrate(actionArguments)
    if (payload == undefined) {
      throw new Error('Could not successfully fetch the SBOM document from the provider.')
    }

    let uploadOperationResponseObject = await upload(actionArguments, payload)
    let results = await status(actionArguments, uploadOperationResponseObject)
    console.log('finally, ', results)
  } catch (error) {
    if (error instanceof Error) core.setFailed(error.message)
  }
}
