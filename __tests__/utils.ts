import {
  ActionArguments,
  ActionSecretArguments,
  LifecycleStage,
  Provider,
  SbomRestApiUploadArguments
} from '../src/types/action'

export const SAMPLE_USER = 'sample-user'
export const SAMPLE_PASSWORD = 'sample-password'
export const SAMPLE_INSTANCE = 'https://www.servicenow.com/'
export const SAMPLE_TOKEN = 'sample-token'
export const SAMPLE_BUSINESS_APPLICATION_ID = 'sample-business-application-id'
export const SAMPLE_BUSINESS_APPLICATION_NAME = 'sample-business-application-name'
export const SAMPLE_BUILD_ID = 'sample-build-id'
export const SAMPLE_PRODUCT_MODEL_ID = 'sample-product-model-id'
export const SAMPLE_REQUESTED_BY = 'sample-request-by'
export const PRE_PRODUCTION_LIFECYCLE_STAGE: LifecycleStage = LifecycleStage.pre_production
export const PRODUCTION_LIFECYCLE_STAGE: LifecycleStage = LifecycleStage.production
export const SAMPLE_SOURCE_SBOM = 'sample-source-sbom'
export const SAMPLE_ACCOUNT_OWNER = 'sample-account-owner'
export const SAMPLE_PROVIDER_REPOSITORY: Provider = Provider.repository
export const SAMPLE_REPOSITORY = 'sample-repository'
export const SAMPLE_PATH = 'sample-path'
export const SAMPLE_MAX_POLLS = 5
export const SAMPLE_POLL_INTERVAL = 5000

export const SAMPLE_REQUIRED_ACTION_INPUTS: ActionArguments = {
  ghAccountOwner: SAMPLE_ACCOUNT_OWNER,
  provider: SAMPLE_PROVIDER_REPOSITORY,
  repository: SAMPLE_REPOSITORY,
  maxStatusPollAttempts: SAMPLE_MAX_POLLS,
  statusAttemptInterval: SAMPLE_POLL_INTERVAL,
  secrets: {
    snSbomUser: SAMPLE_USER,
    snSbomPassword: SAMPLE_PASSWORD,
    snInstanceUrl: SAMPLE_INSTANCE,
    ghToken: SAMPLE_TOKEN
  }
}

export class ActionInputsBuilder {
  private _ghAccountOwner: string = SAMPLE_ACCOUNT_OWNER
  private _provider: Provider = SAMPLE_PROVIDER_REPOSITORY
  private _repository: string = SAMPLE_REPOSITORY
  private _path: string = SAMPLE_PATH
  private _snSbomUser: string = SAMPLE_USER
  private _snSbomPassword: string = SAMPLE_PASSWORD
  private _snInstanceUrl: string = SAMPLE_INSTANCE
  private _ghToken: string = SAMPLE_TOKEN
  private _businessApplicationId: string = SAMPLE_BUSINESS_APPLICATION_ID
  private _businessApplicationName: string = SAMPLE_BUSINESS_APPLICATION_NAME
  private _buildId: string = SAMPLE_BUILD_ID
  private _productModelId: string = SAMPLE_PRODUCT_MODEL_ID
  private _requestedBy: string = SAMPLE_REQUESTED_BY
  private _lifecycleStage: LifecycleStage = LifecycleStage.pre_production
  private _fetchVulnerabilityInfo: boolean = false
  private _fetchPackageInfo: boolean = false
  private _sourceSbom: string = SAMPLE_SOURCE_SBOM
  private _maxStatusPollAttempts: number = 5
  private _statusAttemptInterval: number = 5000

  ghAccountOwner(v: string) {
    this._ghAccountOwner = v
    return this
  }
  provider(v: Provider) {
    this._provider = v
    return this
  }
  repository(v: string) {
    this._repository = v
    return this
  }
  path(v: string) {
    this._path = v
    return this
  }
  snSbomUser(v: string) {
    this._snSbomUser = v
    return this
  }
  snSbomPassword(v: string) {
    this._snSbomPassword = v
    return this
  }
  snInstanceUrl(v: string) {
    this._snInstanceUrl = v
    return this
  }
  ghToken(v: string) {
    this._ghToken = v
    return this
  }
  businessApplicationId(v: string) {
    this._businessApplicationId = v
    return this
  }
  businessApplicationName(v: string) {
    this._businessApplicationName = v
    return this
  }
  buildId(v: string) {
    this._buildId = v
    return this
  }
  productModelId(v: string) {
    this._productModelId = v
    return this
  }
  requestedBy(v: string) {
    this._requestedBy = v
    return this
  }
  lifecycleStage(v: LifecycleStage) {
    this._lifecycleStage = v
    return this
  }
  fetchVulnerabilityInfo(v: boolean) {
    this._fetchVulnerabilityInfo = v
    return this
  }
  fetchPackageInfo(v: boolean) {
    this._fetchPackageInfo = v
    return this
  }
  sourceSbom(v: string) {
    this._sourceSbom = v
    return this
  }
  maxStatusPollAttempts(v: number) {
    this._maxStatusPollAttempts = v
    return this
  }
  statusAttemptInterval(v: number) {
    this._statusAttemptInterval = v
    return this
  }

  build(): ActionArguments {
    return {
      ghAccountOwner: this._ghAccountOwner,
      path: this._path,
      provider: this._provider,
      repository: this._repository,
      maxStatusPollAttempts: this._maxStatusPollAttempts,
      statusAttemptInterval: this._statusAttemptInterval,
      sbomRestApiUploadArguments: {
        businessApplicationId: this._businessApplicationId,
        businessApplicationName: this._businessApplicationName,
        buildId: this._buildId,
        productModelId: this._productModelId,
        requestedBy: this._requestedBy,
        lifecycleStage: this._lifecycleStage,
        fetchVulnerabilityInfo: this._fetchVulnerabilityInfo,
        fetchPackageInfo: this._fetchPackageInfo,
        sbomSource: this._sourceSbom
      },
      secrets: {
        snSbomUser: this._snSbomUser,
        snSbomPassword: this._snSbomPassword,
        snInstanceUrl: this._snInstanceUrl,
        ghToken: this._ghToken
      }
    }
  }
}

export const SAMPLE_SPDX_DOCUMENT = {
  SPDXID: 'SPDXRef-DOCUMENT',
  spdxVersion: 'SPDX-2.3',
  creationInfo: {
    created: '2021-09-01T00:00:00Z',
    creators: ['Tool: GitHub.com-Dependency-Graph']
  },
  name: 'github/example',
  dataLicense: 'CC0-1.0',
  documentDescribes: ['github/example'],
  documentNamespace: 'https://github.com/github/example/dependency_graph/sbom-abcdef123456',
  packages: [
    {
      SPDXID: 'SPDXRef-Package',
      name: 'rubygems:rails',
      versionInfo: '1.0.0',
      downloadLocation: 'NOASSERTION',
      filesAnalyzed: false,
      licenseConcluded: 'MIT',
      licenseDeclared: 'MIT',
      copyrightText: 'Copyright (c) 1985 GitHub.com'
    }
  ]
}

export const SAMPLE_FETCHED_SBOM = {
  sbom: SAMPLE_SPDX_DOCUMENT
}
